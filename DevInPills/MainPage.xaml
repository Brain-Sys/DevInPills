<Page
    x:Class="DevInPills.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DevInPills"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:DevInPills.UWP_ViewModels"
    xmlns:vmpcl="using:DevInPills.ViewModels"
    xmlns:model="using:DevInPills.DomainModels"
    xmlns:cnv="using:DevInPills.Converters"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Interactions="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:beh="using:DevInPills.Behaviors"
    xmlns:trg="using:DevInPills.Triggers"
    mc:Ignorable="d" x:Name="window" NavigationCacheMode="Enabled">

    <Page.Resources>
        <vm:MainViewModel x:Key="vm" />
        <DataTemplate x:Key="videoRowTemplate" x:DataType="model:Video">
            <Grid Margin="12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="0">
                    <Image Source="{x:Bind PictureUrl}" />
                    <Border Background="{StaticResource brushRed2}" Padding="12 4 12 4" Margin="4"
                            HorizontalAlignment="Right" VerticalAlignment="Bottom">
                        <TextBlock Text="{x:Bind Duration,Mode=OneWay}" FontSize="10" Foreground="White" FontWeight="Bold" />
                    </Border>
                </Grid>
                <StackPanel Grid.Column="1" Margin="8 0 0 0">
                    <Border Background="{StaticResource brushRed1}" Padding="12 4 12 4"
                        VerticalAlignment="Top">
                        <TextBlock Text="{x:Bind FormattedDate,Mode=OneWay}" TextAlignment="Center" FontSize="12" Foreground="White" FontWeight="Bold" />
                    </Border>
                    <Border Background="{StaticResource brushRed1}" Padding="12 4 12 4"
                        VerticalAlignment="Top" Margin="0 4 0 0">
                        <TextBlock Text="{x:Bind DaysAgo,Mode=OneWay}" TextAlignment="Center" FontSize="12" Foreground="White" FontWeight="Bold" />
                    </Border>
                </StackPanel>
                <Grid Grid.Column="2" Margin="8 0 0 0">
                    <Grid.Background>
                        <SolidColorBrush Color="{StaticResource red1}" />
                    </Grid.Background>
                    <StackPanel Margin="8">
                        <TextBlock Text="{x:Bind FirstPartDescription}" FontSize="16" TextWrapping="Wrap" Foreground="White" FontWeight="Bold" />
                        <TextBlock Text="{x:Bind SecondPartDescription}" FontSize="12" TextWrapping="Wrap" Foreground="White" />
                    </StackPanel>
                    <Border Padding="12 4 12 4" Margin="4" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                        <StackPanel Orientation="Horizontal">
                            <ToolTipService.ToolTip>
                                <TextBlock>
                                    <Run Text="piace a" />
                                    <Run Text="{x:Bind LikesCount,Mode=OneWay}" />
                                    <Run Text="persone" />
                                </TextBlock>
                            </ToolTipService.ToolTip>
                            <TextBlock Text="&#xe8e1;" FontFamily="Segoe MDL2 Assets" FontSize="10" Foreground="White" VerticalAlignment="Center" />
                            <TextBlock Text="{x:Bind LikesCount,Mode=OneWay}" FontSize="10" Foreground="White" VerticalAlignment="Center" Margin="4 0 0 0" />
                        </StackPanel>
                    </Border>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:DataType="vmpcl:MonthlyVideo" x:Key="monthlyVideoPageTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Border Background="{StaticResource brushRed1}" Padding="16 4 16 4" Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <TextBlock Text="{x:Bind FormattedMonth}" FontSize="24" Foreground="White" FontWeight="Bold" />
                </Border>

                <ListView ItemsSource="{x:Bind Items,Mode=OneWay}" Grid.Row="1" Margin="32 0 32 0"
                                      IsItemClickEnabled="True" x:Name="list" ItemTemplate="{StaticResource videoRowTemplate}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <Interactivity:Interaction.Behaviors>
                        <Interactions:EventTriggerBehavior EventName="ItemClick">
                            <Interactions:NavigateToPageAction Parameter="{Binding ElementName=list,Path=SelectedItem}"
                                                           TargetPage="DevInPills.EpisodePage" />
                        </Interactions:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </ListView>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="3*" />
        </Grid.RowDefinitions>

        <MediaElement x:Name="SpeechPlayer" Visibility="Collapsed" Opacity="0.0" />
        
        <Grid Grid.Row="0" Margin="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Image Source="{x:Bind ViewModel.LastEpisode.PictureUrl,Mode=OneWay}" HorizontalAlignment="Left" />
            <Border Background="{StaticResource brushRed1}" Padding="16 4 16 4" Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top">
                <TextBlock FontSize="16" Foreground="White" FontWeight="Bold">
                    <Run Text="ultima puntata del" />
                    <Run Text="{x:Bind ViewModel.LastEpisode.FormattedDate,Mode=OneWay}" />
                </TextBlock>
            </Border>
            <Border Background="{StaticResource brushRed2}" Padding="12 4 12 4" Margin="4" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                <TextBlock Text="{x:Bind ViewModel.LastEpisode.Duration,Mode=OneWay}" FontSize="10" Foreground="White" FontWeight="Bold" />
            </Border>
            <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto">
                <Grid Background="{StaticResource brushRed1}">
                    <TextBlock Text="{x:Bind Path=ViewModel.LastEpisode.Description,Mode=OneWay}" FontSize="20" Margin="16 4 16 4"
                           Foreground="White" TextWrapping="Wrap" />
                    <Button Content="&#xe768;" FontFamily="Segoe MDL2 Assets" HorizontalAlignment="Right" Foreground="White"
                        FontSize="22" VerticalAlignment="Bottom" Margin="0 0 4 4" />
                </Grid>
            </ScrollViewer>
        </Grid>

        <!--<VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="TabletModeGroup">
                <VisualState x:Name="On">
                    <VisualState.StateTriggers>
                        <trg:TabletModeTrigger/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DesktopView.Background" Value="Yellow" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="InternetStateGroup">
                -->
        <!-- Connected State -->
        <!--
                <VisualState x:Name="ConnectedState">
                    <VisualState.StateTriggers>
                        <trg:NetworkConnectionTrigger />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MissingNetwork.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DesktopView" d:IsOptimized="True"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="DesktopView" d:IsOptimized="True">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="False" />
                        </ObjectAnimationUsingKeyFrames>

                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SmartphoneView" d:IsOptimized="True"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="SmartphoneView" d:IsOptimized="True">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="True" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DesktopView" d:IsOptimized="True"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="DesktopView" d:IsOptimized="True">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="True" />
                        </ObjectAnimationUsingKeyFrames>

                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SmartphoneView" d:IsOptimized="True"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="SmartphoneView" d:IsOptimized="True">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="False" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>-->

        <Grid Grid.Row="1">
            <Image Source="ms-appx:///DevInPills.Images/Logo.png" Opacity="0.15" Margin="0 32 32 0"
                   HorizontalAlignment="Right" VerticalAlignment="Center">
            </Image>
            <FlipView ItemsSource="{x:Bind ViewModel.MonthlyVideo,Mode=OneWay}" ItemTemplate="{StaticResource monthlyVideoPageTemplate}" />
        </Grid>

        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Grid.RowSpan="2"
              Background="{StaticResource redGradient}" BorderThickness="4" BorderBrush="Black" Padding="16"
              Visibility="{x:Bind ViewModel.IsListeningAvailable,Mode=OneWay,Converter={StaticResource cnv2}}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <StackPanel VerticalAlignment="Center">
                <TextBlock Text="&#xe247;" FontFamily="Segoe UI Symbol" FontSize="64" HorizontalAlignment="Center" Foreground="White" />
                <Button Content="annulla" Command="{x:Bind ViewModel.CancelListenCommand}" HorizontalAlignment="Center" Foreground="White" />
            </StackPanel>

            <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="16 0 0 0">
                <TextBlock Text="Cosa puoi chiedermi?" FontWeight="Bold" Foreground="White" />
                <TextBlock Text="ultimo episodio" Foreground="White" />
                <TextBlock Text="episodio del (e aggiungi la data)" Foreground="White" />
            </StackPanel>

        </Grid>

        <Border Visibility="{x:Bind ViewModel.IsBusy,Converter={StaticResource cnv1},Mode=OneWay}" Grid.RowSpan="2"
                Background="{StaticResource redGradient}" HorizontalAlignment="Center" VerticalAlignment="Center"
                Padding="64 12 64 12" BorderThickness="4" BorderBrush="Black">
            <Grid>
                <ProgressRing IsActive="{x:Bind ViewModel.IsBusy,Mode=OneWay}" Foreground="White" />
                <TextBlock Text="download in corso" TextWrapping="Wrap" TextAlignment="Center" Foreground="White" FontSize="64" />
            </Grid>
        </Border>

        <TextBlock Text="&#xe8cd;" FontFamily="Segoe MDL2 Assets" VerticalAlignment="Bottom" Margin="12 0 0 0"
                   FontSize="128" Foreground="{StaticResource redGradient}" x:Name="MissingNetwork" Visibility="Collapsed" />
    </Grid>

    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton Icon="Refresh" Label="aggiorna" Command="{x:Bind ViewModel.RefreshCommand}" />
            <AppBarButton Icon="Microphone" IsEnabled="{x:Bind ViewModel.IsListeningAvailable,Mode=OneWay}" Label="ascolta" Command="{x:Bind ViewModel.ListenCommand}" />
            <CommandBar.SecondaryCommands>
                <AppBarButton Icon="Help" Label="informazioni su" />
                <AppBarButton Icon="Setting" Label="impostazioni" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>

</Page>